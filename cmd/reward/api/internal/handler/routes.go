// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	auth "github.com/qnfnypen/titan-reward/cmd/reward/api/internal/handler/auth"
	user "github.com/qnfnypen/titan-reward/cmd/reward/api/internal/handler/user"
	"github.com/qnfnypen/titan-reward/cmd/reward/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.HeaderMiddleware},
			[]rest.Route{
				{
					// 用户登陆
					Method:  http.MethodPost,
					Path:    "/login",
					Handler: auth.UserLoginHandler(serverCtx),
				},
				{
					// 获取邮箱验证码/钱包的随机码
					Method:  http.MethodGet,
					Path:    "/verify_code",
					Handler: auth.GetVerifyCodeHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/reward"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthMiddleware, serverCtx.HeaderMiddleware},
			[]rest.Route{
				{
					// 绑定keplr
					Method:  http.MethodPost,
					Path:    "/bind_keplr",
					Handler: user.BindKeplrHandler(serverCtx),
				},
				{
					// 获取用户的奖励详情
					Method:  http.MethodGet,
					Path:    "/detail",
					Handler: user.RewardDetailHandler(serverCtx),
				},
				{
					// 获取用户信息详情
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: user.InfoHandler(serverCtx),
				},
				{
					// 用户登出
					Method:  http.MethodPut,
					Path:    "/login_out",
					Handler: user.LoginoutHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/reward/user"),
	)
}
